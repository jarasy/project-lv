<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jarasy.lv.api.mapper.LvGoodsMapper">
  <resultMap id="BaseResultMap" type="com.jarasy.lv.api.domain.po.LvGoods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="detial" jdbcType="VARCHAR" property="detial" />
    <result column="parameter" jdbcType="VARCHAR" property="parameter" />
    <result column="use_function" jdbcType="VARCHAR" property="useFunction" />
    <result column="use_limit" jdbcType="INTEGER" property="useLimit" />
    <result column="drop" jdbcType="VARCHAR" property="drop" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, type, detial, parameter, use_function, use_limit, drop
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lv_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lv_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jarasy.lv.api.domain.po.LvGoods">
    insert into lv_goods (id, name, type, 
      detial, parameter, use_function, 
      use_limit, drop)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{detial,jdbcType=VARCHAR}, #{parameter,jdbcType=VARCHAR}, #{useFunction,jdbcType=VARCHAR}, 
      #{useLimit,jdbcType=INTEGER}, #{drop,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jarasy.lv.api.domain.po.LvGoods">
    insert into lv_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="detial != null">
        detial,
      </if>
      <if test="parameter != null">
        parameter,
      </if>
      <if test="useFunction != null">
        use_function,
      </if>
      <if test="useLimit != null">
        use_limit,
      </if>
      <if test="drop != null">
        drop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="detial != null">
        #{detial,jdbcType=VARCHAR},
      </if>
      <if test="parameter != null">
        #{parameter,jdbcType=VARCHAR},
      </if>
      <if test="useFunction != null">
        #{useFunction,jdbcType=VARCHAR},
      </if>
      <if test="useLimit != null">
        #{useLimit,jdbcType=INTEGER},
      </if>
      <if test="drop != null">
        #{drop,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jarasy.lv.api.domain.po.LvGoods">
    update lv_goods
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="detial != null">
        detial = #{detial,jdbcType=VARCHAR},
      </if>
      <if test="parameter != null">
        parameter = #{parameter,jdbcType=VARCHAR},
      </if>
      <if test="useFunction != null">
        use_function = #{useFunction,jdbcType=VARCHAR},
      </if>
      <if test="useLimit != null">
        use_limit = #{useLimit,jdbcType=INTEGER},
      </if>
      <if test="drop != null">
        drop = #{drop,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jarasy.lv.api.domain.po.LvGoods">
    update lv_goods
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      detial = #{detial,jdbcType=VARCHAR},
      parameter = #{parameter,jdbcType=VARCHAR},
      use_function = #{useFunction,jdbcType=VARCHAR},
      use_limit = #{useLimit,jdbcType=INTEGER},
      drop = #{drop,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>